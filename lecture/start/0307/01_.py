# <연습문제 3> 16진수 문자로 이루어진 1차 배열이 주어질 떄, 왼쪽부터 순차적으로 암호비트패턴을 찾아 차례대로 출력하시오.
# 암호는 연속되어있다.
# input = 0DEC
# output = 0 2

# 16진수를 2진수로 바꿔주는 것
hex_to_bin_map = {
        '0': '0000', '1': '0001', '2': '0010', '3': '0011',
        '4': '0100', '5': '0101', '6': '0110', '7': '0111',
        '8': '1000', '9': '1001', 'A': '1010', 'B': '1011',
        'C': '1100', 'D': '1101', 'E': '1110', 'F': '1111'
    }


code = {
    '001101': 0,
    '010011': 1,
    '111011': 2,
    '110001': 3,
    '100011': 4,
    '110111': 5,
    '001011': 6,
    '111101': 7,
    '011001': 8,
    '101111': 9
}

N_str = input()
total_str = ''
for i in N_str:
    I = hex_to_bin_map[i]
    total_str += I


total_str = list(map(int, total_str))
for i in reversed(total_str):
    index = 0
    if total_str[i]==1:
        arr = total_str[i:i-6]
        print(f'{code[arr]}')




# 반복되는 0과 1의 패턴
# pattern = {
#     (2, 2, 1, 1) : '0',
#     (1, 1, 2, 2) : '1',
#     (0, 3, 1, 2) : '2',
#     (0, 2, 3, 1) : '3',
#     (0, 1, 3, 1) : '4',
#     (0, 2, 1, 3) : '5',
#     (2, 1, 1, 2) : '6',
#     (0, 4, 1, 1) : '7',
#     (1, 2, 2, 1) : '8',
#     (0, 1, 1, 4) : '9'
# }