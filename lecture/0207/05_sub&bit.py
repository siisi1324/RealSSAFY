# 숫자를 0부터 7까지 숫자의 비트 확인하기
arr = [1, 2, 3]
N = len(arr)
# for i in range(2**N): 왼쪽으로 1비트 밀면 곱하기 2
# 1 << N == 2 ** N
for i in range(1 << N):
    # 여기서 i는 찐숫자고, (2의 N승은 정확히 1이 N개 만큼 존재하는 2진수이므로 10진수로 이용)
    for j in range(N):
        # j는 arr의 0과 1을 판독하기 위해 도는 횟수
        if i & (1 << j) : # i & 001, i & 010, i & 100 :
            print(arr[j], end=',')
    print() # 한 부분집합 모양 확인 끝

print('=====================================================')

# 결론적으로 2의 N승만큼 곱하는 이유는 모든 밸류의 0과 1을 검사하기 위해서다. (또 2의 N승의 값이 숫자로도 이용되므로)
# 그 자리에 1이 있으면 밸류가 있다는 거고, 아니면 없다는 거니까!
